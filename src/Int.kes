/// An integer number
extern pub type Int

/// Add two ints
@extern
@type (Int, Int) -> Int
pub let (+)

/// Substract two ints
@extern
@type (Int, Int) -> Int
pub let (-)

/// Multiply two ints
@extern
@type (Int, Int) -> Int
pub let (*)

/// Divide two ints
@extern
@type (Int, Int) -> Int
pub let (/)

/// Exponentiation
/// 
/// ```kestrel
/// 2 ^ 3 // => 8
/// ```
@extern
@type (Int, Int) -> Int
pub let (^)

/// Modulo operator
/// 
/// ```kestrel
/// 10 % 2 // => 0
/// 11 % 2 // => 1
/// ```
@extern
@type (Int, Int) -> Int
pub let (%)
